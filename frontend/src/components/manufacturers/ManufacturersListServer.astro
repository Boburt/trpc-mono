---
import { trpcClient } from "@frontend/src/utils/trpc-server";
import { ManufacturersWhereInputSchema } from "@backend/lib/zod/index";
import { z } from "zod";
import ManufacturersListClientProvider from "./ManufacturersListClientProvider";
import { parseQueryParams } from "@frontend/src/utils/manufacturers_filter_fn";
import { apiClient } from "@frontend/src/utils/eden";
const { categorySlug } = Astro.props;

const searchParams = new URL(Astro.request.url).search;
const pathname = new URL(Astro.request.url).pathname;

const manufacturersFilterValues = parseQueryParams(searchParams);
const filters = [];
if (categorySlug) {
  filters.push({
    field: 'categories.code',
    operator: 'eq',
    value: categorySlug,
  })
}

const {data:manufacturers } = await apiClient.api.manufacturers.with_facet.get({
  $query: {
    filters: filters.length ? JSON.stringify(filters) : undefined,
    limit: '20',
    facets: manufacturersFilterValues?.manufacturers_filter ?? null,
    imageSizes: [
      {
        image_code: "logo",
        size_code: "300_300",
      },
    ]
  },
});

---

<ManufacturersListClientProvider
  initialData={manufacturers ?? {
    items: []
  }}
  categorySlug={categorySlug}
  searchParams={searchParams}
  pathname={pathname}
  client:load
/>

---
import BaseLayout from "@frontend/src/layouts/BaseLayout.astro";
import { apiClient } from "@frontend/src/utils/eden";
import { statusRender } from "@frontend/src/utils/status";
import { ProfileFormsApplyProvider } from "@frontend/src/components/profile/forms/apply/index";

const { id } = Astro.params;
export const prerender = false;

if (!id) {
  Astro.redirect("/");
}
const accessToken = Astro.cookies.get("x-token")?.value;

const { data, status } = await apiClient.api.forms_sent_items[id!].get({
  $headers: {
    Authorization: `Bearer ${accessToken}`,
  },
});
if (status == 404 || status == 500) {
  return statusRender(404, `${Astro.site}404`);
}

if (!data) {
  return statusRender(404, `${Astro.site}404`);
}

if (!("id" in data)) {
  return statusRender(404, `${Astro.site}404`);
}

if (data.model == "manufacturers") {
  if (Astro.locals.user) {
    const { data: manufacturer_user, status } =
      await apiClient.api.manufacturers_users.get({
        $query: {
          limit: "1",
          offset: "0",
          fields: "id,manufacturer_id,user_id",
          filters: JSON.stringify([
            {
              field: "user_id",
              operator: "eq",
              value: Astro.locals.user.id,
            },
            {
              field: "manufacturer_id",
              operator: "eq",
              value: data.model_id,
            },
          ]),
        },
        $headers: {
          Authorization: `Bearer ${accessToken}`,
        },
      });
    if (manufacturer_user && "data" in manufacturer_user) {
      if (
        Array.isArray(manufacturer_user.data) &&
        manufacturer_user.data.length == 0
      ) {
        return statusRender(403, `${Astro.site}403`);
      }
    } else {
      return statusRender(404, `${Astro.site}404`);
    }
  } else {
    return statusRender(403, `${Astro.site}403`);
  }
}

if (!["filled", "opened"].includes(data.status)) {
  await apiClient.api.forms_sent_items[id!].opened.post({
    $headers: {
      Authorization: `Bearer ${accessToken}`,
    },
  });
}
---

<BaseLayout disableBreadcrumbs={true}>
  {
    data.status == "filled" ? (
      <div
        class="bg-yellow-50 border border-yellow-200 text-sm text-yellow-800 rounded-lg p-4 dark:bg-yellow-800/10 dark:border-yellow-900 dark:text-yellow-500 w-6/12 mx-auto"
        role="alert"
      >
        <div class="flex">
          <div class="flex-shrink-0">
            <svg
              class="flex-shrink-0 h-4 w-4 mt-0.5"
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <>
                <path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z" />
                <path d="M12 9v4" />
                <path d="M12 17h.01" />
              </>
            </svg>
          </div>
          <div class="ms-4">
            <h3 class="text-sm font-semibold">Форма уже была заполнена</h3>
            <div class="mt-1 text-sm text-yellow-700">
              Вы уже заполняли эту форму. Если вы хотите изменить данные,
              пожалуйста, обратитесь к администратору.
            </div>
          </div>
        </div>
      </div>
    ) : (
      <ProfileFormsApplyProvider
        formItem={data.form!}
        formSentItemId={id!}
        client:only
      />
    )
  }
</BaseLayout>
